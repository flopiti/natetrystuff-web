name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build
        env:
          SPRING_BOOT_URL: http://localhost:8080
          CODE_HELPER_URL: http://localhost:1234

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build_artifacts
          path: |
            .next/**
            public/**
            package.json
            package-lock.json
            .env.production

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_artifacts

      - name: Add secrets to .env.production
        run: |
          echo '' >> .env.production
          echo 'AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}' >> .env.production
          echo 'SSH_HOST=${{ secrets.SSH_HOST }}' >> .env.production
          echo 'SSH_USERNAME=${{ secrets.SSH_USERNAME }}' >> .env.production
          echo 'SSH_PASSWORD=${{ secrets.SSH_PASSWORD }}' >> .env.production
          echo 'OPEN_AI_API_KEY=${{ secrets.OPENAI_KEY }}' >> .env.production

      - name: Setup SSH Known Hosts  
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

      - name: Copy built files and configuration to server
        run: |
          ls -la
          scp -r public .next .env.production package.json package-lock.json ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }}:/apps/natetrystuff-web/app/
          ssh ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }} "cd /apps/natetrystuff-web/app && npm ci --production"

      - name: Restart Service
        run: ssh ${{ secrets.DROPLET_USERNAME }}@${{ secrets.DROPLET_HOST }} 'sudo systemctl restart natetrystuff-web.service'
